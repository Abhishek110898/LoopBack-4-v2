/// <reference types="express" />
import { Next, Provider } from '@loopback/core';
import { Getter } from '@loopback/repository';
import { Request, Response, RestApplication, Middleware, MiddlewareContext } from '@loopback/rest';
import * as RateLimit from 'express-rate-limit';
import { RateLimitMetadata, RateLimitOptions } from '../types';
export declare class RatelimitMiddlewareProvider implements Provider<Middleware> {
    private readonly getDatastore;
    private readonly getMetadata;
    private readonly application;
    private readonly config?;
    constructor(getDatastore: Getter<RateLimit.Store>, getMetadata: Getter<RateLimitMetadata>, application: RestApplication, config?: RateLimitOptions | undefined);
    value(): (ctx: MiddlewareContext, next: Next) => Promise<import("@loopback/core").NonVoid>;
    action(request: Request, response: Response): Promise<void>;
}
