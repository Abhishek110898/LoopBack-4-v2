import { Provider } from '@loopback/core';
import { Getter, juggler } from '@loopback/repository';
import { RestApplication } from '@loopback/rest';
import { RateLimitMetadata, RateLimitOptions, Store } from '../types';
export declare class RatelimitDatasourceProvider implements Provider<Store> {
    private readonly getMetadata;
    private readonly application;
    private readonly config?;
    constructor(getMetadata: Getter<RateLimitMetadata>, application: RestApplication, config?: RateLimitOptions | undefined);
    value(): Promise<Store>;
    action(): Promise<Store>;
    executeRedisCommand(dataSource: juggler.DataSource, command: string, args: (string | number)[]): Promise<unknown>;
}
