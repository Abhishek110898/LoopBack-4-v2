import { Provider } from '@loopback/core';
import { VerifyFunction } from '../../../types';
import { Auth0 } from '../../types';
import { Strategy, StrategyOptionWithRequest } from 'passport-auth0';
export type Auth0StrategyFactory = (options: Auth0.Auth0StrategyOptions | StrategyOptionWithRequest, verifierPassed?: VerifyFunction.Auth0Fn) => Strategy;
export declare class Auth0StrategyFactoryProvider implements Provider<Auth0StrategyFactory> {
    private readonly auth0Verifier;
    constructor(auth0Verifier: VerifyFunction.Auth0Fn);
    value(): Auth0StrategyFactory;
    getAuth0Strategy(options: Auth0.Auth0StrategyOptions | StrategyOptionWithRequest, verifier?: VerifyFunction.Auth0Fn): Strategy;
}
