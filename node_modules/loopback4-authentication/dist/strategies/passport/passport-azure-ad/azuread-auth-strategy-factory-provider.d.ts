import { Provider } from '@loopback/core';
import { Request } from '@loopback/rest';
import { VerifyFunction } from '../../types';
import { IProfile, VerifyCallback, OIDCStrategy, IOIDCStrategyOptionWithRequest, IOIDCStrategyOptionWithoutRequest } from 'passport-azure-ad';
export type AzureADAuthStrategyFactory = (options: IOIDCStrategyOptionWithoutRequest | IOIDCStrategyOptionWithRequest, verifierPassed?: VerifyFunction.AzureADAuthFn) => OIDCStrategy;
export declare class AzureADAuthStrategyFactoryProvider implements Provider<AzureADAuthStrategyFactory> {
    private readonly verifierAzureADAuth;
    constructor(verifierAzureADAuth: VerifyFunction.AzureADAuthFn);
    value(): AzureADAuthStrategyFactory;
    createCallbackWithReq(verifyFn: VerifyFunction.AzureADAuthFn): (req: Request, iss: string, sub: string, profile: IProfile, accessToken: string, refreshToken: string, done: VerifyCallback) => Promise<void>;
    createCallbackWithoutReq(verifyFn: VerifyFunction.AzureADAuthFn): (iss: string, sub: string, profile: IProfile, accessToken: string, refreshToken: string, done: VerifyCallback) => Promise<void>;
    getAzureADAuthStrategyVerifier(options: IOIDCStrategyOptionWithoutRequest | IOIDCStrategyOptionWithRequest, verifierPassed?: VerifyFunction.AzureADAuthFn): OIDCStrategy;
}
